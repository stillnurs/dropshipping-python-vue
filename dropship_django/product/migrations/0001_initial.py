# Generated by Django 3.2.2 on 2021-05-19 10:38
from django.contrib.postgres.operations import BtreeGinExtension
from django.db import migrations, models
import django.db.models.deletion
import product.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        BtreeGinExtension(),
        migrations.CreateModel(
            name='BaseProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('brand', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField(blank=True, null=True)),
                ('product_type', models.CharField(choices=[('physical', 'PHYSICAL'), ('digital', 'DIGITAL')], default='physical', max_length=8)),
                ('in_stock', models.BooleanField(default=False)),
                ('stock', models.IntegerField(default=0, help_text='stock quantity in pcs/packs etc.')),
                ('weight', models.DecimalField(decimal_places=2, help_text='weight of mobile in gramms', max_digits=10)),
                ('specifications', models.JSONField(verbose_name='product_specifications')),
                ('slug', models.SlugField(unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ('-date_added',),
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/<django.db.models.fields.CharField>/')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stores', to='users.vendorprofile')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='StoreDirectory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('specifications', models.JSONField(verbose_name='Store specifications')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='directories', to='product.store')),
            ],
            options={
                'verbose_name_plural': 'Base Categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ParentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('specifications', models.JSONField(verbose_name='Store specifications')),
                ('directory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_categories', to='product.storedirectory')),
            ],
            options={
                'verbose_name_plural': 'Parent Categories',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=product.models.get_upload_path)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=product.models.get_upload_path)),
                ('default', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_image', to='product.baseproductmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ChildCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('specifications', models.JSONField(verbose_name='Store specifications')),
                ('parent', models.ManyToManyField(related_name='child_categories', to='product.ParentCategory')),
            ],
            options={
                'verbose_name_plural': 'Child Categories',
            },
        ),
        migrations.AddField(
            model_name='baseproductmodel',
            name='child_category',
            field=models.ManyToManyField(related_name='child_products', to='product.ChildCategory'),
        ),
        migrations.AddField(
            model_name='baseproductmodel',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_products', to='users.vendorprofile'),
        ),
        migrations.AddField(
            model_name='baseproductmodel',
            name='parent_category',
            field=models.ManyToManyField(related_name='parent_products', to='product.ParentCategory'),
        ),
        migrations.AddField(
            model_name='baseproductmodel',
            name='store',
            field=models.ManyToManyField(related_name='store_products', to='product.Store'),
        ),
    ]
